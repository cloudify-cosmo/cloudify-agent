#!/bin/bash -e

set -x
# Download and execute the script that will take care of the agent installation
{% set has_service = process_management.name != 'detach' %}
MYSELF=$(whoami)
run_as()
{
    user=$1
    if [ "$MYSELF" == "$user" ]
    then
        {% if has_service %}
        sg cfyagent "${@:2}"
        {% else %}
        ${@:2}
        {% endif %}
    else
        su $user --shell /bin/bash -c "set -e; ${@:2}"
    fi
}

configure_agent_installation()
{
   # Create cfyagent group so that we can assign it user that execute and install agent
   # to that group so that they can have access to `/opt/cloudify-agent-{version}`
   sudo groupadd -f cfyagent
   sudo usermod -a -G cfyagent {{ user }}

   # Prepare and create agent directory and provide write permission to users belongs to cfyagent group
   sudo mkdir -p {{ agent_dir }}
   sudo chgrp -R cfyagent $(dirname {{ agent_dir }})
   sudo chmod -R g+w $(dirname {{ agent_dir }})
}

export -f configure_agent_installation

add_ssl_cert()
{
    # Create all the directories in the path to the cert file
    mkdir -p $(dirname {{ ssl_cert_path }})
    echo "{{ ssl_cert_content }}" > {{ ssl_cert_path }}
}
export -f add_ssl_cert

download()
{
    echo "Downloading {{ link }}..."
    SCRIPT_NAME=$1

    if command -v wget > /dev/null 2>&1; then
        wget {{ link }} -O ${SCRIPT_NAME} -nv --ca-certificate {{ ssl_cert_path }}
    elif command -v curl > /dev/null 2>&1; then
        STATUS_CODE=$(curl -L -o ${SCRIPT_NAME} --write-out "%{http_code}" {{ link }} --cacert {{ ssl_cert_path }})
        if [ "${STATUS_CODE}" -ne "200" ] ; then
            echo >&2 "Received unexpected HTTP response code (${STATUS_CODE}). Response data was saved into ${SCRIPT_NAME}."
            return 1
        fi
    else
        echo >&2 "error: wget/curl not found. cannot download agent installation script"
        return 1
    fi
    echo "Download ended successfully"
}

# Create a temp directory and cd into it
{% if tmpdir %}
export TMPDIR={{ tmpdir }}
{% endif %}
cd $(mktemp -d)

{% if has_service %}
configure_agent_installation
{% endif %}

# If using `sudo` the script is running as a user, and there's no need
# to use `su`. If running as root, `su` as the user, otherwise the cert
# dir will be created with root privileges
{% if sudo and has_service %}
sg cfyagent "add_ssl_cert"
{% elif sudo %}
add_ssl_cert
{% else %}
run_as {{ user }} add_ssl_cert
{% endif %}

log_file=/var/log/cloudify/agent-install.log
echo "Creating directory: $(dirname ${log_file})"
{{ sudo }} mkdir -p $(dirname ${log_file})

download agent_installer.sh
chmod +x ./agent_installer.sh
echo "Executing agent installer, log will be written to ${log_file}"
{{ sudo }} ./agent_installer.sh 2>&1 | {{ sudo }} tee ${log_file} > /dev/null
echo "Agent installation completed"
rm ./agent_installer.sh
