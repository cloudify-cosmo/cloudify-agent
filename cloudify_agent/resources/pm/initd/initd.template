#!/bin/sh
### BEGIN INIT INFO
# Provides:          {{ service_name }}
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Cloudify Agent worker
### END INIT INFO

RUNAS={{ user }}

PIDFILE={{ pidfile }}
LOGFILE={{ log_file }}
CMD=({{ virtualenv_path }}/bin/python -m cloudify_agent.worker --queue "{{ queue }}" --max-workers {{ max_workers }} --name "{{ name }}")

start() {
  if [ -f "$PIDFILE" ] && ps -p $(cat "$PIDFILE"); then
    echo 'Service already running' >&2
    return 1
  fi
  source {{ config_path }}
  echo 'Starting service...' >&2
  nohup sudo -Eu ${RUNAS} "${CMD[@]}" </dev/null >/dev/null 2>&1 &
  echo $! > ${PIDFILE}
  echo 'Service started' >&2
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! ps -p $(cat "$PIDFILE"); then
    echo 'Service not running' >&2
    return 1
  fi
  echo 'Stopping service...' >&2
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  echo 'Service stopped' >&2
}

status() {
  echo "Checking status of service {{ service_name }}..."
  if [ -f "$PIDFILE" ] && ps -p $(cat "$PIDFILE"); then
    echo "Service running with PID $(cat "$PIDFILE")"
  else
    echo "Service is not running"
    return 1
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|uninstall}"
esac
