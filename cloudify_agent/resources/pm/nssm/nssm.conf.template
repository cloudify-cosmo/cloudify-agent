@echo off

echo Installing the agent as a windows service...

{{ nssm_path }} install {{ name }} {{ virtualenv_path }}\Scripts\celeryd.exe ^
--events -Q {{ queue }} ^
--hostname={{ name }} ^
--concurrency={{ max_workers }} ^
--maxtasksperchild=10 ^
--without-gossip ^
--without-mingle ^
--loglevel={{ log_level }} ^
--logfile={{ log_file }} ^
--include=cloudify.dispatch ^
--config=cloudify.broker_config ^
-Ofair ^
--with-gate-keeper ^
--gate-keeper-bucket-size={{ max_workers }} ^
--with-logging-server ^
--logging-server-logdir={{ workdir }}\logs

if %errorlevel% neq 0 exit /b %errorlevel%

echo Setting service environment

{{ nssm_path }} set {{ name }} AppEnvironmentExtra ^
REST_HOST={{ rest_host }} ^
REST_PORT={{ rest_port }} ^
REST_PROTOCOL={{ rest_protocol }} ^
FILE_SERVER_HOST={{ file_server_host }} ^
FILE_SERVER_PORT={{ file_server_port }} ^
FILE_SERVER_PROTOCOL={{ file_server_protocol }} ^
SECURITY_ENABLED={{ security_enabled }} ^
VERIFY_REST_CERTIFICATE={{ verify_rest_certificate }} ^
LOCAL_REST_CERT_FILE={{ local_rest_cert_file }} ^
REST_CERT_CONTENT={{ rest_cert_content }} ^
MANAGER_FILE_SERVER_URL={{ file_server_protocol }}://{{ file_server_host }}:{{ file_server_port }} ^
MANAGER_FILE_SERVER_BLUEPRINTS_ROOT_URL={{ file_server_protocol }}://{{ file_server_host }}:{{ file_server_port }}/blueprints ^
MANAGER_FILE_SERVER_DEPLOYMENTS_ROOT_URL={{ file_server_protocol }}://{{ file_server_host }}:{{ file_server_port }}/deployments ^
CLOUDIFY_DAEMON_NAME="{{ name }}" ^
CLOUDIFY_DAEMON_STORAGE_DIRECTORY="{{ storage_dir }}" ^
CLOUDIFY_DAEMON_USER={{ user }} ^
CELERY_WORK_DIR="{{ workdir }}" ^
CELERY_APP=cloudify_agent.app.app ^
CELERY_TASK_SERIALIZER=json ^
CELERY_RESULT_SERIALIZER=json ^ {{ custom_environment }}

if %errorlevel% neq 0 exit /b %errorlevel%

echo Configuring startup policy...

sc config {{ name }} start= {{ startup_policy }}

if %errorlevel% neq 0 exit /b %errorlevel%

echo Configuring failure policy...

sc failure {{ name }} reset= {{ failure_reset_timeout }} actions= restart/{{ failure_restart_delay }}

if %errorlevel% neq 0 exit /b %errorlevel%

echo Cloudify Agent configured successfully as a Windows Service ({{ name }})
