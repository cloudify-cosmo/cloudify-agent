@echo off

echo Installing the agent as a windows service...

"{{ nssm_path }}" install {{ name }} "{{ virtualenv_path }}\Scripts\python.exe" -m cloudify_agent.worker ^
    --queue "{{ queue }}" ^
    --max-workers {{ max_workers }} ^
    --name "{{ name }}"


if %errorlevel% neq 0 exit /b %errorlevel%

echo Setting service environment

"{{ nssm_path }}" set {{ name }} AppEnvironmentExtra ^
REST_HOST={{ rest_host }} ^
REST_PORT={{ rest_port }} ^
LOCAL_REST_CERT_FILE="{{ local_rest_cert_file }}" ^
MANAGER_FILE_SERVER_URL=https://{{ rest_host }}:{{ rest_port }}/resources ^
AGENT_LOG_DIR="{{ log_dir }}" ^
CLOUDIFY_DAEMON_USER={{ user }} ^
AGENT_LOG_LEVEL="{{ log_level }}" ^
AGENT_WORK_DIR="{{ workdir }}" ^ {{ custom_environment }} ^
CFY_EXEC_TEMP="{{ executable_temp_path }}" ^
CLOUDIFY_DAEMON_STORAGE_DIRECTORY="{{ storage_dir }}"

"{{ nssm_path }}" set {{ name }} DisplayName "Cloudify Agent - {{ name }}"
"{{ nssm_path }}" set {{ name }} Description "Cloudify Agent Service"

if %errorlevel% neq 0 exit /b %errorlevel%

echo Configuring startup policy...

sc config {{ name }} start= {{ startup_policy }}

if %errorlevel% neq 0 exit /b %errorlevel%

echo Configuring failure policy...

sc failure {{ name }} reset= {{ failure_reset_timeout }} actions= restart/{{ failure_restart_delay }}

if %errorlevel% neq 0 exit /b %errorlevel%

echo Cloudify Agent configured successfully as a Windows Service ({{ name }})
