$ps1_sysnative

# All output should be UTF-8 (default is UTF-16).
$PSDefaultParameterValues['*:Encoding'] = 'utf8'

$ServiceName = {{ name }}
Write-Output "Checking whether service ($ServiceName) is already installed..."

$ExistingService = Get-Service -Name $ServiceName
if (!$?) {
    Write-Output "Agent already installed"
    Exit
}

if %ERRORLEVEL% NEQ 1060 (
    echo Unexpected query return code: %ERRORLEVEL%
    exit 1
)

echo Installing the agent as a windows service...

{%- if service_user -%}
echo Service will be installed for user '{{ service_user }}'
    {% set auth_params = "obj= \"{{ service_user }}\" password= \"{{ service_password }}\"" %}
{% else %}
echo Service will be installed for user 'LOCALSYSTEM'
    {% set auth_params = "" %}
{% endif %}
{%- set binpath = '\\"' + virtualenv_path + '\Scripts\python.exe\\" -m cloudify_agent.worker --vars-file \\"' + vars_file + '\\" --queue \\"' + queue + '\\" --max-workers ' + max_workers + ' --name \\"' + name  + '\\"' -%}
{%- set displayname = 'Cloudify Agent - ' + name -%}

echo Creating service: name={{ name }}, startup policy={{ startup_policy }}, path={{ binpath }}, display name={{ displayname }}
sc create {{ name }} start= {{ startup_policy }} binpath= "{{ binpath }}" displayname= "{{ displayname }}" {{ auth_params }}
if %ERRORLEVEL% NEQ 0 (
    echo Failed creating service (rc=%ERRORLEVEL%)
    exit 1
)

{%- set description = "Cloudify Agent Service " + name -%}
echo Setting service description: {{ description }}...
sc description {{ name }} "{{ description }}"
if %ERRORLEVEL% NEQ 0 (
    echo Failed setting service's description (rc=%ERRORLEVEL%)
    exit 1
)

echo Configuring failure policy: reset={{ failure_reset_timeout }}, actions=restart/{{ failure_restart_delay }}...
sc failure {{ name }} reset= {{ failure_reset_timeout }} actions= restart/{{ failure_restart_delay }}
if %ERRORLEVEL% NEQ 0 (
    echo Failed setting service's failure policy (rc=%ERRORLEVEL%)
    exit 1
)

echo Cloudify Agent configured successfully as a Windows Service ({{ name }})
