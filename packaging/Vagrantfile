########
# Copyright (c) 2014 GigaSpaces Technologies Ltd. All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
#    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    * See the License for the specific language governing permissions and
#    * limitations under the License.

# -*- mode: ruby -*-
# vi: set ft=ruby :

AWS_ACCESS_KEY_ID = ENV['AWS_ACCESS_KEY_ID']
AWS_ACCESS_KEY = ENV['AWS_ACCESS_KEY']
AWS_ACCESS_KEY_ID_UPLOAD_TEMP = ENV['AWS_ACCESS_KEY_ID_UPLOAD_TEMP']
AWS_ACCESS_KEY_UPLOAD_TEMP = ENV['AWS_ACCESS_KEY_UPLOAD_TEMP']
REPO = ENV['REPO']
GITHUB_USERNAME = ENV['GITHUB_USERNAME']
GITHUB_PASSWORD = ENV['GITHUB_PASSWORD']

UBUNTU_TRUSTY_BOX_NAME = 'ubuntu/trusty64'
UBUNTU_PRECISE_BOX_NAME = 'hashicorp/precise64'
DEBIAN_JESSIE_BOX_NAME = 'binarydata/debian-jessie'
CENTOS_FINAL_BOX_NAME = 'chef/centos-6.5'


Vagrant.configure('2') do |config|
  config.vm.define "debian_jessie_agent" do |debian_jessie|
    # dummy box, will be overriden
    config.nfs.functional = false
    debian_jessie.vm.box = "dummy"
    debian_jessie.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    debian_jessie.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY
      # debian-jessie 64bit box
      aws.ami = "ami-699f021e"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.medium"
      aws.keypair_name = "vagrant_build"
      override.ssh.username = "admin"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"
      aws.tags = { "Name" => "vagrant debian jessie agent build" }
      aws.security_groups = "vagrant_cfy_build"
    end
    debian_jessie.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD} #{AWS_ACCESS_KEY_ID_UPLOAD_TEMP} #{AWS_ACCESS_KEY_UPLOAD_TEMP} #{REPO}"
      s.privileged = false
    end
  end

  config.vm.define "ubuntu_trusty_agent" do |ubuntu_trusty|
    # dummy box, will be overriden
    ubuntu_trusty.vm.box = "dummy"
    ubuntu_trusty.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    ubuntu_trusty.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY
      # official ubuntu 14.04 64bit box
      aws.ami = "ami-f0b11187"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.medium"
      aws.keypair_name = "vagrant_build"
      override.ssh.username = "ubuntu"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"
      override.nfs.functional = false
      aws.tags = { "Name" => "vagrant ubuntu trusty agent build" }
      aws.security_groups = "vagrant_cfy_build"
    end
    ubuntu_trusty.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD} #{AWS_ACCESS_KEY_ID_UPLOAD_TEMP} #{AWS_ACCESS_KEY_UPLOAD_TEMP} #{REPO}"
      s.privileged = false
    end
  end

  config.vm.define "ubuntu_precise_agent" do |ubuntu_precise|
    # dummy box, will be overriden
    ubuntu_precise.vm.box = "dummy"
    ubuntu_precise.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    ubuntu_precise.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY
      # official ubuntu 12.04 64bit box
      aws.ami = "ami-036eaa74"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.medium"
      aws.keypair_name = "vagrant_build"
      override.ssh.username = "ubuntu"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"
      override.nfs.functional = false
      aws.tags = { "Name" => "vagrant ubuntu precise agent build" }
      aws.security_groups = "vagrant_cfy_build"
    end
    ubuntu_precise.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD} #{AWS_ACCESS_KEY_ID_UPLOAD_TEMP} #{AWS_ACCESS_KEY_UPLOAD_TEMP} #{REPO}"
      s.privileged = false
    end
  end

  config.vm.define "centos_final_agent" do |centos_final|
    #dummy box, will be overriden
    centos_final.vm.box = "dummy"
    centos_final.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    centos_final.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY
      # unofficial centos6.4 64bit box
      aws.ami = "ami-3b39ee4c"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.medium"
      aws.keypair_name = "vagrant_build"
      override.ssh.username = "root"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_centos_build.pem"
      override.nfs.functional = false
      aws.tags = { "Name" => "vagrant agent centos build" }
      aws.security_groups = "vagrant_linux_build"
    end
    #need to sync folders
    centos_final.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD} #{AWS_ACCESS_KEY_ID_UPLOAD_TEMP} #{AWS_ACCESS_KEY_UPLOAD_TEMP} #{REPO}"
      s.privileged = false
    end
  end

  config.vm.define "centos_core_agent" do |centos_core|
    #dummy box, will be overriden
    centos_core.vm.box = "dummy"
    centos_core.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    centos_core.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY
      # unofficial centos6.4 64bit box
      aws.ami = "ami-a0e9b5c6"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.medium"
      aws.keypair_name = "vagrant_build"
      override.ssh.username = "centos"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"
      override.nfs.functional = false
      aws.tags = { "Name" => "vagrant agent centos build" }
      aws.security_groups = "vagrant_linux_build"
    end
    centos_core.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD} #{AWS_ACCESS_KEY_ID_UPLOAD_TEMP} #{AWS_ACCESS_KEY_UPLOAD_TEMP} #{REPO}"
      s.privileged = false
    end
  end

  config.vm.define "redhat7_agent" do |redhat7|
    #dummy box, will be overriden
    redhat7.vm.box = "dummy"
    redhat7.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    redhat7.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY
      # unofficial centos6.4 64bit box
      aws.ami = "ami-25158352"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.medium"
      aws.keypair_name = "vagrant_build"
      aws.user_data = "#!/bin/bash\nsed -i -e 's/^Defaults.*requiretty/# Defaults requiretty/g' /etc/sudoers"
      override.ssh.username = "ec2-user"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"
      override.nfs.functional = false
      aws.tags = { "Name" => "vagrant agent redhat7 build" }
      aws.security_groups = "vagrant_linux_build"
    end
    redhat7.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD} #{AWS_ACCESS_KEY_ID_UPLOAD_TEMP} #{AWS_ACCESS_KEY_UPLOAD_TEMP} #{REPO}"
      s.privileged = false
    end
  end

  config.vm.define "redhat6_agent" do |redhat6|
    #dummy box, will be overriden
    redhat6.vm.box = "dummy"
    redhat6.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    redhat6.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY
      aws.ami = "ami-8cfc51fb"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.medium"
      aws.keypair_name = "vagrant_build"
      aws.user_data = "#!/bin/bash\nsed -i -e 's/^Defaults.*requiretty/# Defaults requiretty/g' /etc/sudoers"
      override.ssh.username = "ec2-user"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"
      override.nfs.functional = false
      aws.tags = { "Name" => "vagrant agent redhat6 build" }
      aws.security_groups = "vagrant_linux_build"
    end
    redhat6.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD} #{AWS_ACCESS_KEY_ID_UPLOAD_TEMP} #{AWS_ACCESS_KEY_UPLOAD_TEMP} #{REPO}"
      s.privileged = false
    end
  end

  config.vm.define "windows_agent" do |windows|
    windows.vm.box = "dummy"
    windows.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    windows.vm.guest = :windows
    windows.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY
      # this a pre-baked AMI, not pure base image
      aws.ami = "ami-118ee566"
      aws.region = "eu-west-1"
      aws.instance_type = "m3.medium"
      aws.keypair_name = "vagrant_build"
      override.ssh.username = "Administrator"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"
      override.nfs.functional = false
      aws.tags = { "Name" => "vagrant windows agent build" }
      aws.security_groups = "vagrant_windows"
    end
    windows.vm.synced_folder ".", "/vagrant", disabled: true
    windows.vm.synced_folder "./windows/packaging", "/home/Administrator/packaging"
    # shell provisioning uses bash, so use cmd to run batch script
    windows.vm.provision "shell" do |shell|
      shell.path = 'windows/provision.sh'
      shell.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD} #{AWS_ACCESS_KEY_ID} #{AWS_ACCESS_KEY}  #{REPO}"
      shell.privileged = false
    end
  end


  config.vm.define :debian_jessie_agent_local do |local|
    local.vm.provider :virtualbox do |vb|
      vb.customize ['modifyvm', :id, '--memory', '1024']
    end
    local.vm.box = DEBIAN_JESSIE_BOX_NAME
    local.vm.hostname = 'local'
    local.vm.synced_folder "../", "/cloudify-agent", create: true
    local.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD}"
      s.privileged = false
    end
  end
  config.vm.define :ubuntu_precise_agent_local do |local|
    local.vm.provider :virtualbox do |vb|
      vb.customize ['modifyvm', :id, '--memory', '1024']
    end
    local.vm.box = UBUNTU_PRECISE_BOX_NAME
    local.vm.hostname = 'local'
    local.vm.synced_folder "../", "/cloudify-agent", create: true
    local.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD}"
      s.privileged = false
    end
  end
  config.vm.define :ubuntu_trusty_agent_local do |local|
    local.vm.provider :virtualbox do |vb|
      vb.customize ['modifyvm', :id, '--memory', '1024']
    end
    local.vm.box = UBUNTU_TRUSTY_BOX_NAME
    local.vm.hostname = 'local'
    local.vm.synced_folder "../", "/cloudify-agent", create: true
    local.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD}"
      s.privileged = false
    end
  end
  config.vm.define :centos_final_agent_local do |local|
    local.vm.provider :virtualbox do |vb|
      vb.customize ['modifyvm', :id, '--memory', '1024']
    end
    local.vm.box = CENTOS_FINAL_BOX_NAME
    local.vm.hostname = 'local'
    local.vm.synced_folder "../", "/cloudify-agent", create: true
    local.vm.provision "shell" do |s|
      s.path = "linux/provision.sh"
      s.args = "#{GITHUB_USERNAME} #{GITHUB_PASSWORD}"
      s.privileged = false
    end
  end
end
