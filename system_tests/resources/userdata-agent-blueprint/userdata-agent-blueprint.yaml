tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3rc1/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3rc1/plugin.yaml

plugins:

  mock:
    source: mock-plugin
    executor: host_agent

inputs:

  image: {}
  flavor: {}
  agent_user: {}
  os_family: {}
  userdata: {}
  file_path: {}
  install_method: {}
  name:
    default: ''


node_types:

  nodes.Application:
    derived_from: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: mock.mock_plugin.tasks.run
          inputs:
            file_path:
              default: { get_input: file_path }

node_templates:

  host:
    type: cloudify.openstack.nodes.Server
    properties:
      image: { get_input: image }
      flavor: { get_input: flavor }
      os_family: { get_input: os_family }
      agent_config:
        install_method: { get_input: install_method }
        user: { get_input: agent_user }
        env:
          MY_ENV_VAR: MY_ENV_VAR_VALUE
        extra:
          name: { get_input: name }
      server:
        userdata: { get_input: userdata }

  application:
    type: nodes.Application
    relationships:
      - type: cloudify.relationships.contained_in
        target: host

outputs:
  MY_ENV_VAR:
    value: { get_attribute: [application, MY_ENV_VAR] }
  file_content:
    value: { get_attribute: [application, file_content] }
