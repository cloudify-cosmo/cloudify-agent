def configuration = [vaultUrl: "${VAULT_URL}",  vaultCredentialId: "vault-app-role", engineVersion: 2]

def secrets = [
  [path: 'secret/jenkins/cloudifyaws', engineVersion: 2, secretValues: [
    [envVar: 'MANAGER_USERNAME', vaultKey: 'username'],
    [envVar: 'MANAGER_TENANT', vaultKey: 'tenant'],
    [envVar: 'MANAGER_IP', vaultKey: 'ip'],
    [envVar: 'MANAGER_PASSWORD', vaultKey: 'password']]],
]
@Library('pipeline-shared-library') _

pipeline {
  agent {
    kubernetes {
      defaultContainer 'jnlp'
      yamlFile 'jenkins/build-pod.yaml'
    }
  }
  options {
    checkoutToSubdirectory('cloudify-agent')
    buildDiscarder(logRotator(numToKeepStr:'10'))
    timeout(time: 60, unit: 'MINUTES')
    timestamps()
  }
  environment {
    PROJECT = "cloudify-agent"
    VERSION = getVersion("${env.PROJECT}", "${env.BRANCH_NAME}").trim()
    PRERELEASE = getPreRelease("${env.PROJECT}", "${env.BRANCH_NAME}").trim()
  }
  stages{
    stage('Deploy EC2 instances'){
      steps{
        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
          container('py36'){
            echo 'Setup Github SSH key'
            setupGithubSSHKey()
            dir("${env.WORKSPACE}/${env.PROJECT}/jenkins"){
              withVault([configuration: configuration, vaultSecrets: secrets]){
                sh script:"""#!/bin/bash
                  set -euxo pipefail
                  python -m venv .venv
                  source .venv/bin/activate
                  pip install --upgrade pip
                  pip install cloudify==5.1.1
                  cfy profile use ${env.MANAGER_IP} -u ${env.MANAGER_USERNAME} -p ${env.MANAGER_PASSWORD} -t ${env.MANAGER_TENANT} --ssl
                  pushd 'bp'
                    cfy install -b ec2-blueprint-${env.BRANCH_NAME}-${env.BUILD_NUMBER} ec2-blueprint.yaml
                  popd
                  cfy deployments capabilities ec2-blueprint-${env.BRANCH_NAME}-${env.BUILD_NUMBER} --json > capabilities.json
                  jq -r '.key_content.value' capabilities.json > ~/.ssh/ec2_ssh_key && chmod 600 ~/.ssh/ec2_ssh_key
                  sleep 160
                  ssh-keyscan -H \$(jq -r '.endpoint.value' capabilities.json) >> ~/.ssh/known_hosts
                  echo 'ClientAliveInterval 50' | sudo tee --append /etc/ssh/sshd_config
                """, label:'Configure and install blueprint on manager'
              }
            }
          }
        }
      }
    }
    stage('Terminate py27 instnace'){ // we made github to wait on a job with this exact name, typo included
      steps{
        container('py36'){
          dir("${env.WORKSPACE}/${env.PROJECT}/jenkins"){
            withVault([configuration: configuration, vaultSecrets: secrets]){
              echo 'Uninstall and delete blueprint from manager'
              sh """#!/bin/bash
                set -euxo pipefail
                source .venv/bin/activate
                cfy uninstall ec2-blueprint-${env.BRANCH_NAME}-${env.BUILD_NUMBER} --force --allow-custom-parameters -p ignore_failure=true
              """
            }
          }
        }
      }
    }
  }
}
